#!/bin/sh
# inkVerb updater for Inker™, verb.ink

# This updates the Inker
## This contains many version updaters to update a Inker™ sequentially, one version at a time.
## This is run at the path: /opt/ink/${IUPGRADE_REPO}/update

# DEV NOTE: Larger versions must be at the bottom, smaller versions at the top, so "descending"

# DEV NOTE: A directory, even empty, must exist in the same directory as this "update" file named by by each update version ie: 0.20.08/

# DEV INSTRUCTIONS: Put all related files for each patch in a folder named by the version number, ie: 0.20.08/


MIN_IVERNO=0.20.07
IUPGRADE_REPO="ink-u18-dev-update"

### Sample version updater:
#UPGRADE_PATCH_IVERNO=0.20.08
#if [ $(echo ${UPGRADE_PATCH_IVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") -gt $(echo ${IVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") ] ; then
#
## Notes
#CLEAN_PATCH_IVERNO=$(echo $UPGRADE_PATCH_IVERNO | sed -e "s/\.//g")
#PCLdoc="$(cat <<UPCL
#Patch ${UPGRADE_PATCH_IVERNO} Changelog:
### Patch Notes Here...
#UPCL
#)"
#echo "$PCLdoc"
### So we can call a specific version later if needed
#eval "v$CLEAN_PATCH_KVERNO='$(echo "$PCLdoc")'"
#
## Move to working directory of the patch
#if [ -d "/opt/verb/${IUPGRADE_REPO}/${UPGRADE_PATCH_IVERNO}/" ]; then
#cd /opt/verb/${IUPGRADE_REPO}/${UPGRADE_PATCH_IVERNO}/; fi
#
## Run the update scripts for this patch
#
###### SCRIPTS GO HERE #####
### NOTE: PWD is /opt/ink/${IUPGRADE_REPO}/${UPGRADE_PATCH_IVERNO}/
# echo "I would normally say, 'Ink!' but that's a verb."
#
############################
## Set and refresh the current version into inklists
#sed -i "s/IVERNO=.*/IVERNO=${UPGRADE_PATCH_IVERNO}/g" /opt/ink/conf/inklists/inkerverno
#. /opt/ink/conf/inklists/inkerverno
#echo "Inker updated to v${IVERNO}"
#else
#echo "${UPGRADE_PATCH_VERNO} patch not necessary..."
#fi
################END#UPGRADE#PATCH#


## Version Check ##
### The minimum version that can use this updater
## Include the configs
. /opt/ink/conf/inklists/inkerverno
. /opt/ink/conf/inkerinfo
. /opt/verb/conf/sitenameip
## Check minimal updateable version
if [ $(echo ${MIN_IVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") -gt $(echo ${IVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") ] ; then
echo "Current Verber™ version is ${IVERNO}, minimum ${MIN_IVERNO} to use this updater.
Run updateverberlegacy for older versions."
exit 22
fi

# Update Knights & repoverlist
rm -rf /opt/ink/knights/*
cp -rf /opt/ink/${IUPGRADE_REPO}/knights/* /opt/ink/knights/
cp -f /opt/ink/${IUPGRADE_REPO}/repoverlist /opt/ink/conf/inklists/
cd /opt/ink
wget wget https://raw.githubusercontent.com/inkVerb/ink-u18-dev/master/README.md
echo "Knights and repo list have been updated."

# Run version-by-version updates


UPGRADE_PATCH_IVERNO=0.20.08
if [ $(echo ${UPGRADE_PATCH_IVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") -gt $(echo ${IVERNO} | sed -e "s/\.//g" | sed -e "s/^0*//g") ] ; then

# Notes
CLEAN_PATCH_IVERNO=$(echo $UPGRADE_PATCH_IVERNO | sed -e "s/\.//g")
PCLdoc="$(cat <<UPCL
Patch ${UPGRADE_PATCH_IVERNO} Changelog:
## Patch Notes Here...
UPCL
)"
echo "$PCLdoc"
## So we can call a specific version later if needed
eval "v$CLEAN_PATCH_KVERNO='$(echo "$PCLdoc")'"

# Move to working directory of the patch
if [ -d "/opt/verb/${IUPGRADE_REPO}/${UPGRADE_PATCH_IVERNO}/" ]; then
cd /opt/verb/${IUPGRADE_REPO}/${UPGRADE_PATCH_IVERNO}/; fi

# Run the update scripts for this patch

##### SCRIPTS GO HERE #####
## NOTE: PWD is /opt/ink/${IUPGRADE_REPO}/${UPGRADE_PATCH_IVERNO}/

# echo "I would normally say, 'Ink!' but that's a verb."

###########################
# Set and refresh the current version into inklists
sed -i "s/IVERNO=.*/IVERNO=${UPGRADE_PATCH_IVERNO}/g" /opt/ink/conf/inklists/inkerverno
. /opt/ink/conf/inklists/inkerverno
echo "Inker updated to v${IVERNO}"
else
echo "${UPGRADE_PATCH_VERNO} patch not necessary..."
fi
###############END#UPGRADE#PATCH#


# Finish
echo "Inker at v${IVERNO} framework from ${INKUPDATEREPO}."
